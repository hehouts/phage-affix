#    ███████╗    ███╗   ██╗     █████╗     ██╗  ██╗    ███████╗    ███████╗    ██╗    ██╗     ███████╗    
#    ██╔════╝    ████╗  ██║    ██╔══██╗    ██║ ██╔╝    ██╔════╝    ██╔════╝    ██║    ██║     ██╔════╝    
#    ███████╗    ██╔██╗ ██║    ███████║    █████╔╝     █████╗      █████╗      ██║    ██║     █████╗      
#    ╚════██║    ██║╚██╗██║    ██╔══██║    ██╔═██╗     ██╔══╝      ██╔══╝      ██║    ██║     ██╔══╝      
#    ███████║    ██║ ╚████║    ██║  ██║    ██║  ██╗    ███████╗    ██║         ██║    ███████╗███████╗    
#    ╚══════╝    ╚═╝  ╚═══╝    ╚═╝  ╚═╝    ╚═╝  ╚═╝    ╚══════╝    ╚═╝         ╚═╝    ╚══════╝╚══════╝    
#                                                                                                         
#    ████████████████████████████████████████████████████████████████████████████████████████████████████

#    █ █ █ Run notes
#   this is garbage code, and must be handled as such:
#   there needs to be a copy of config_sgc_{ksize}.yml for each ksize




#    █ █ █ Globs and Libs █ █ █ 
PHAGES = ['ivig_358', 'uvig_505586', 'uvig_264832', 'uvig_225190', 'uvig_308517', 'uvig_389464', 'uvig_360436', 'uvig_110493', 'uvig_52126', 'uvig_245649', 'uvig_516991', 'uvig_219649', 'uvig_143949', 'uvig_96206', 'uvig_221329']
KSIZES = [21, 15, 11]
RADII = [1, 2]
#KSIZES = [21]
#RADII = [2]


from sourmash import load_one_signature
import pandas as pd
import os


#    ████████████████████████████████████████████████████████████████████████████████████████████████████

#     █████╗     ██╗         ██╗     
#    ██╔══██╗    ██║         ██║     
#    ███████║    ██║         ██║     
#    ██╔══██║    ██║         ██║     
#    ██║  ██║    ███████╗    ███████╗
#    ╚═╝  ╚═╝    ╚══════╝    ╚══════╝


rule all: 
    input:
#      █ █ █ get_phage_ref_genomes █ █ █
#     expand("data/ref_genomes/{phage}.fa", phage=PHAGES),
#      █ █ █ make_catlas █ █ █
#       expand("spacegraphcats/k{ksize}_r{radius}/SM_CTTKX_k{ksize}_r{radius}/catlas.csv", ksize = KSIZES, radius = RADII),
#      █ █ █ make_nbhds █ █ █ 
#        expand("spacegraphcats/k{ksize}_r{radius}/SM_CTTKX_k{ksize}_r{radius}_search_oh0/{phage}.fa.cdbg_ids.reads.fa.gz", phage=PHAGES, ksize = KSIZES, radius = RADII)
#      █ █ █ rule sketch_phage_nbhds_sigs █ █ █ 
#        expand("sigs/{phage}.SM_CTTKX_k{ksize}_r{radius}.fa.cdbg_ids.reads.sig", phage = PHAGES, ksize = KSIZES, radius = RADII),
#      █ █ █  sketch_phage_ref_sigs█ █ █ 
#        expand("sigs/{phage}.k{ksize}.fa.sig", phage = PHAGES, ksize = KSIZES)
#     █ █ █  write_comp_table █ █ █  
        "R/data/compare.csv"
#        "compare.csv"

#    ████████████████████████████████████████████████████████████████████████████████████████████████████
#    
#    ██████╗     ██╗   ██╗    ██╗         ███████╗    ███████╗
#    ██╔══██╗    ██║   ██║    ██║         ██╔════╝    ██╔════╝
#    ██████╔╝    ██║   ██║    ██║         █████╗      ███████╗
#    ██╔══██╗    ██║   ██║    ██║         ██╔══╝      ╚════██║
#    ██║  ██║    ╚██████╔╝    ███████╗    ███████╗    ███████║
#    ╚═╝  ╚═╝     ╚═════╝     ╚══════╝    ╚══════╝    ╚══════╝
#════════════════════════════════════════════════════════════════════════════════════════════════════
#════════════════════════════════════════════════════════════════════════════════════════════════════

#════════════════════════════════════════════════════════════════════════════════════════════════════
rule get_phage_ref_genomes:
    input:
        gutphagedatabase="/group/ctbrowngrp/virus-references/gut-phage-db/GPD_sequences.fa.gz"
    output: 
        phage_genome="data/ref_genomes/{phage}.fa"
    shell:
        """
        zgrep -A1 '{wildcards.phage}' {input.gutphagedatabase} > {output.phage_genome}
        """

#════════════════════════════════════════════════════════════════════════════════════════════════════
rule make_catlas:
    input:
        phage_genome = expand("data/ref_genomes/{phage}.fa", phage=PHAGES),
        sgc_config = "spacegraphcats/k{ksize}_r{radius}/config_sgc_k{ksize}_r{radius}.yml"
    output: 
        catlas = "spacegraphcats/k{ksize}_r{radius}/SM_CTTKX_k{ksize}_r{radius}/catlas.csv"
    shell:
        """
        cd spacegraphcats/k{wildcards.ksize}_r{wildcards.radius}/
        python -m spacegraphcats run config_sgc_k{wildcards.ksize}_r{wildcards.radius}.yml build --nolock
        """
#════════════════════════════════════════════════════════════════════════════════════════════════════
rule make_nbhds:
    input:
        catlas = "spacegraphcats/k{ksize}_r{radius}/SM_CTTKX_k{ksize}_r{radius}/catlas.csv",
        phage_genome = expand("data/ref_genomes/{phage}.fa", phage=PHAGES),
        sgc_config = ancient("spacegraphcats/k{ksize}_r{radius}/config_sgc_k{ksize}_r{radius}.yml"),

    output: 
        nbhds = "spacegraphcats/k{ksize}_r{radius}/SM_CTTKX_k{ksize}_r{radius}_search_oh0/{phage}.fa.cdbg_ids.reads.gz"
    shell:
        """
        cd spacegraphcats/k{wildcards.ksize}_r{wildcards.radius}/
        python -m spacegraphcats run config_sgc_k{wildcards.ksize}_r{wildcards.radius}.yml extract_contigs extract_reads --nolock
        """
#════════════════════════════════════════════════════════════════════════════════════════════════════
rule sketch_phage_nbhd_sigs:
    input:
        "spacegraphcats/k{ksize}_r{radius}/SM_CTTKX_k{ksize}_r{radius}_search_oh0/{phage}.fa.cdbg_ids.reads.gz"

    output:
        "sigs/{phage}.SM_CTTKX_k{ksize}_r{radius}.fa.cdbg_ids.reads.sig"
        
    shell:
        """
        sourmash sketch dna -p k={wildcards.ksize},scaled=1 {input} -o {output} 
        """
#════════════════════════════════════════════════════════════════════════════════════════════════════
rule sketch_phage_ref_sigs:
    input:
        "data/ref_genomes/{phage}.fa"

    output:
        "sigs/{phage}.k{ksize}.fa.sig"
        
    shell:
        """
        sourmash sketch dna -p k={wildcards.ksize},scaled=1 {input} -o {output} 
        """
#    ════════════════════════════════════════════════════════════════════════════════════════════════════
# ██████████ MAKE SIG COMPARISONS (GENERATE PY DICTS?) ██████████

rule write_comp_table:
    output:
        "R/data/compare.csv"
    input: 
        expand("sigs/{phage}.k{ksize}.fa.sig", phage = PHAGES, ksize = KSIZES),
        expand("sigs/{phage}.SM_CTTKX_k{ksize}_r{radius}.fa.cdbg_ids.reads.sig",phage = PHAGES, ksize = KSIZES, radius = RADII),
    run:
        comp_list = [] 
#
        for r in RADII:
            for k in KSIZES:
                for p in PHAGES:
        ##### PHAGE REF
                    p_ref_file = 'sigs/' + p + '_k' + str(k) + '_r' + str(r) + '.fa.sig'
                    p_ref_sig = load_one_signature(p_ref_file, ksize=k, select_moltype='DNA')
                    p_ref_hashset = set(p_ref_sig.minhash.hashes.keys())
        ##### PHAGE NBHD
                    p_n_file = 'sigs/'+ p + '.SM_CTTKX_k' + k + '_r' + r + '.fa.cdbg_ids.reads.sig'
                    p_nbhd_sig = load_one_signature(p_n_file, ksize=k, select_moltype='DNA')
                    p_nbhd_hashset = set(p_nbhd_sig.minhash.hashes.keys())
#        
#        
                    containment_ref_in_nbhd = p_ref_sig.contained_by(p_nbhd_sig)
                    containment_nbhd_in_ref = p_nbhd_sig.contained_by(p_ref_sig)
#        
#        
                    shared_hashes = len(p_ref_hashset & p_nbhd_hashset)
#        
                    hashes_in_ref = len(p_ref_hashset)
                    hashes_in_nbhd = len(p_nbhd_hashset)
#        
                    comp = { 
                                'phage_reference':   p ,
#        
                                'ref_in_nbhd' : containment_ref_in_nbhd,
                                'cont_nbhd_in_ref' : containment_nbhd_in_ref,
#        
                                'shared_hashes' : shared_hashes,
#        
                                'ref_num_hashes' : hashes_in_ref,
                                'nbhd_num_hashes' : hashes_in_nbhd,
#
                                'sample_id': 'SM_CTTKX',
                                'sample_type': 'virome',
                            }
                    comp_list.append(comp)
                    comp_df = pd.DataFrame.from_records(comp_list)
        comp_df.to_csv(os.getcwd()+'/R/data/compare.csv', sep = ',', index=False) 
#                    comp_df.to_csv(os.getcwd()+'/compare.csv', sep = ',', index=False) 


#    ════════════════════════════════════════════════════════════════════════════════════════════════════

#    ════════════════════════════════════════════════════════════════════════════════════════════════════

#    ════════════════════════════════════════════════════════════════════════════════════════════════════


